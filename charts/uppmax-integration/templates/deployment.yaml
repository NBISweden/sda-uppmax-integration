apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "uppmax-integration.name" . }}
  labels:
    role: uppmax-integration
    app: {{ template "uppmax-integration.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ .Release.Name }}-uppmax-integration
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ default "3" .Values.global.revisionHistory }}
  selector:
    matchLabels:
      app: {{ template "uppmax-integration.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "uppmax-integration.name" . }}
        role: uppmax-integration
        release: {{ .Release.Name }}
      annotations:
{{- if .Values.podAnnotations }}
{{- toYaml .Values.podAnnotations | nindent 8 -}}
{{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
      containers:
      - name: uppmax-integration
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy | quote }}
        env:
        - name: GLOBAL_CRYPT4GHKEY
          value: /secrets/{{ .Values.global.crypt4ghKey }}
        - name: GLOBAL_EGAUSERNAME
          valueFrom: 
            secretKeyRef:
              name: {{ include "uppmax-integration.name" . }}-secret
              key: egaUsername
        - name: GLOBAL_EGAPASSWORD
          valueFrom: 
            secretKeyRef:
              name: {{ include "uppmax-integration.name" . }}-secret
              key: egaPassword
        - name: GLOBAL_EGAURL
          valueFrom: 
            secretKeyRef:
              name: {{ include "uppmax-integration.name" . }}-secret
              key: egaURL
        - name: GLOBAL_EXPIRATIONDAYS
          value: {{ .Values.global.expirationDays | quote }}
        - name: GLOBAL_ISS
          value: {{ .Values.global.iss }}
        - name: GLOBAL_JWTKEY
          value: /secrets/{{ .Values.global.jwt.keyName }}
        - name: GLOBAL_S3URL
          value: {{ .Values.global.s3url }}
        - name: GLOBAL_UPPMAXUSERNAME 
          valueFrom: 
            secretKeyRef:
              name: {{ include "uppmax-integration.name" . }}-secret
              key: uppmaxUsername
        - name: GLOBAL_UPPMAXPASSWORD
          valueFrom: 
            secretKeyRef:
              name: {{ include "uppmax-integration.name" . }}-secret
              key: uppmaxPassword
        - name: GLOBAL_SUPRUSERNAME
          valueFrom: 
            secretKeyRef:
              name: {{ include "uppmax-integration.name" . }}-secret
              key: suprUsername
        - name: GLOBAL_SUPRPASSWORD
          valueFrom: 
            secretKeyRef:
              name: {{ include "uppmax-integration.name" . }}-secret
              key: suprPassword
        - name: GLOBAL_SUPRURL
          valueFrom: 
            secretKeyRef:
              name: {{ include "uppmax-integration.name" . }}-secret
              key: suprURL
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: keys
          mountPath: /secrets/
      volumes:
        - name: keys
          projected:
            defaultMode: 0440
            sources:
            - secret:
                name: {{ required "A secret for the JWT signing key is needed" .Values.global.jwt.secretName }}
                items:
                  - key: {{ required "The name of the JWT signing key is needed" .Values.global.jwt.keyName }}
                    path: {{ .Values.global.jwt.keyName }}
            - secret:
                name: {{ required "A secret for the crypt4gh public key is needed" .Values.global.jwt.secretName }}
                items:
                  - key: {{ .Values.global.crypt4ghKey }}
                    path: {{ .Values.global.crypt4ghKey }}
